"use strict";function PubTest(t){this.version="0.1.0",this.testing=t||"Test",this.cases={total:0,pass:0,fail:0},console.time(t)}PubTest.prototype.results=function(){var t=this.cases.pass?"color: #007A00":"color: #FE0000",s=this.cases.fail?"color: #FE0000":"color: #007A00";console.log("%c============",s),console.log("%cTest Results",s),console.log("%c============",s),console.log("%cTotal:  %d",s,this.cases.total),console.log("%cPassed: %d",t,this.cases.pass),console.log("%cFailed: %d",s,this.cases.fail),console.timeEnd(this.testing),console.log("")},PubTest.prototype.testCase=function(t){t()},PubTest.prototype.assert=function(t,s){this._addCase(t,s)},PubTest.prototype.assertEqual=function(t,s,e){var a=t===s;this._addCase(a,e)},PubTest.prototype.assertNotEqual=function(t,s,e){var a=t!==s;this._addCase(a,e)},PubTest.prototype.assertTrue=function(t,s){var e=t===!0;this._addCase(e,s)},PubTest.prototype.assertFalse=function(t,s){var e=t===!1;this._addCase(e,s)},PubTest.prototype.assertLess=function(t,s,e){var a=s>t;this._addCase(a,e)},PubTest.prototype.assertLessEqual=function(t,s,e){var a=s>=t;this._addCase(a,e)},PubTest.prototype.assertGreater=function(t,s,e){var a=t>s;this._addCase(a,e)},PubTest.prototype.assertGreaterEqual=function(t,s,e){var a=t>=s;this._addCase(a,e)},PubTest.prototype.assertRange=function(t,s,e,a){var o=t>=s&&e>=t;this._addCase(o,a)},PubTest.prototype.assertNotRange=function(t,s,e,a){var o=s>t&&t>e;this._addCase(o,a)},PubTest.prototype.assertType=function(t,s,e){var a=typeof t===s;this._addCase(a,e)},PubTest.prototype.assertString=function(t,s){var e=this.assertType(t,"string",s);this._addCase(e,s)},PubTest.prototype.assertNumber=function(t,s){var e=this.assertType(t,"number",s);this._addCase(e,s)},PubTest.prototype.assertBoolean=function(t,s){var e=this.assertType(t,"boolean",s);this._addCase(e,s)},PubTest.prototype.assertInteger=function(t,s){var e=isNaN(t)?!1:parseInt(t,10)===t;this._addCase(e,s)},PubTest.prototype.assertArray=function(t,s){var e=t instanceof Array;this._addCase(e,s)},PubTest.prototype.assertArrayContains=function(t,s,e){var a=t.indexOf(s)<0?!1:!0;this._addCase(a,e)},PubTest.prototype.assertNotArrayContains=function(t,s,e){var a=t.indexOf(s)<0?!0:!1;this._addCase(a,e)},PubTest.prototype.assertProperty=function(t,s,e){var a=t.hasOwnProperty(s);this._addCase(a,e)},PubTest.prototype.assertArrayEqual=function(t,s,e){if(!t instanceof Array||!s instanceof Array)return this._addCase(!1,e);if(t.length!==s.length)return this._addCase(!1,e);for(var a=0;a<t.length;a++)if(t[a]!==s[a])return this._addCase(!1,e);return this._addCase(!0,e)},PubTest.prototype._addCase=function(t,s){this.cases.total++,s=s||"test case "+this.cases.total,console.assert(t,s),t?this._passed():this._failed()},PubTest.prototype._passed=function(){this.cases.pass++},PubTest.prototype._failed=function(){this.cases.fail++};